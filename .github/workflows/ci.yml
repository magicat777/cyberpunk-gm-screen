name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  # Job 1: Lint and Format Check
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Check formatting with Prettier
        run: npx prettier --check "src/**/*.{js,ts,css,html}"
        
      - name: Run HTML validation
        run: npx html-validate "*.html"

  # Job 2: Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Audit dependencies
        run: npm audit --audit-level=moderate
        continue-on-error: true

  # Job 3: Build and Test
  test:
    name: Build & Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Run unit tests
        run: npm test -- --run
        
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest' && matrix.node == 18
        with:
          name: dist-artifacts
          path: dist/

  # Job 4: Accessibility Testing
  accessibility:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run accessibility tests
        run: node test-accessibility.js

  # Job 5: Quality Gates Check
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [lint, security, test, accessibility]
    if: always()
    steps:
      - name: Check quality gates
        run: |
          echo "Checking quality gates..."
          echo "âœ… All quality checks must pass before deployment"